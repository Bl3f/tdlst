// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  jQuery(function() {
    "use strict";
    var $, HomePage, SocketClient, homepage, socket_client;
    $ = jQuery;
    HomePage = (function() {
      HomePage.prototype.tasks_actions = function() {
        this.tasks = $('.tasks ul li');
        this.tasks.unbind('click');
        return this.tasks.on('click', function(event) {
          var _this = this;
          return $.ajax({
            url: $(this).attr('data-toggle-url'),
            success: function(data) {
              return console.log(data);
            },
            error: function(data) {
              return console.log(data);
            }
          });
        });
      };

      HomePage.prototype.textarea_submit = function() {
        return this.textarea_task.on('keyup', function(event) {
          event.preventDefault();
          if (event.keyCode === 13) {
            $(this).attr('disabled');
            $(this).val($(this).val().replace("\n", ""));
            return $(this).parents('form').submit();
          }
        });
      };

      HomePage.prototype.aside_reduce = function() {
        var _this = this;
        return $('.js-reduce-aside').on('click', function(event) {
          event.preventDefault();
          if (_this.aside.hasClass('outside')) {
            _this.aside.removeClass('outside');
            return _this.aside.animate({
              right: "0px"
            }, 500, function() {});
          } else {
            _this.aside.addClass('outside');
            return _this.aside.animate({
              right: "-300px"
            }, 500, function() {});
          }
        });
      };

      function HomePage() {
        this.reduce_button = $('.js-reduce-aside.right');
        this.show_button = $('.js-reduce-aside.left');
        this.aside = $('aside');
        this.textarea_task = $("#new_task");
        this.todo = $('.todo');
        this.aside_reduce();
        this.textarea_submit();
        this.tasks_actions();
      }

      return HomePage;

    })();
    SocketClient = (function() {
      SocketClient.prototype.add_task = function(data) {
        var message;
        message = {
          action: "add_task",
          task: data,
          todo: this.home_manager.todo.attr('data-todo-id')
        };
        return this.socket.send(message);
      };

      SocketClient.prototype.connected = function() {
        return this.socket.subscribe(this.home_manager.todo.attr('id'));
      };

      SocketClient.prototype.disconnected = function() {
        return console.log("disconnected");
      };

      SocketClient.prototype.messaged = function(data) {
        switch (data.action) {
          case "new_task":
            $('.tasks ul').append('<label for="task_' + data.task_id + '">\
                                               <li data-toggle-url="toggle/' + data.task_id + '">\
                                                   <input id="task_' + data.task_id + '" type="checkbox">\
                                                   <p>' + data.task + '</p>\
                                                   <a href="delete/' + data.task_id + '">\
                                                       <span class="glyphicon glyphicon-trash"></span>\
                                                   </a>\
                                               </li>\
                                            </label>');
            return this.home_manager.tasks_actions();
        }
      };

      function SocketClient(home_manager) {
        var _this = this;
        this.home_manager = home_manager;
        this.messaged = __bind(this.messaged, this);
        this.disconnected = __bind(this.disconnected, this);
        this.connected = __bind(this.connected, this);
        this.socket = new io.Socket();
        this.socket.connect();
        this.socket.on('connect', this.connected);
        this.socket.on('disconnect', this.disconnected);
        this.socket.on('message', this.messaged);
        $('#task_form').on('submit', function(event) {
          _this.add_task(_this.home_manager.textarea_task.val());
          _this.home_manager.textarea_task.val('').focus();
          return false;
        });
      }

      return SocketClient;

    })();
    homepage = new HomePage;
    return socket_client = new SocketClient(homepage);
  });

}).call(this);
